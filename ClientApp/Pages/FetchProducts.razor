@inject HttpClient Http
@page "/fetchproducts"
@using System.Text.Json
<h3>Products</h3>

@if (errorMessage != null)
{
    <p style="color:red">@errorMessage</p>
}
else if (products == null)
{
    <p>Loading...</p>
}
else
{
    <ul>
        @foreach (var product in products)
        {
            <li>@product.Name - $@product.Price Stock: @product.Stock  Category: @product?.Category?.Name</li>
        }
    </ul>
}

@code {
    private Product[]? products;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Güncellenmiş backend route
            var response = await Http.GetAsync("api/productlist");
            response.EnsureSuccessStatusCode();

            var json = await response.Content.ReadAsStringAsync();

            products = JsonSerializer.Deserialize<Product[]>(json, new JsonSerializerOptions
            {
                PropertyNameCaseInsensitive = true
            });
        }
        catch (Exception ex)
        {
            errorMessage = $"Error loading products: {ex.Message}";
            Console.Error.WriteLine(errorMessage);
        }
    }

    public class Product
    {
        public int Id { get; set; }
        public string? Name { get; set; }
        public double Price { get; set; }
        public int Stock { get; set; }
        public Category? Category { get; set; }
    }

    public class Category
    {
        public int Id { get; set; }
        public string? Name { get; set; }
    }
}
